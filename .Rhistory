library(xlsx)
library(data.table)
xyz <- readxl::read_excel("~/Downloads/XYZ-2015-2022-table-20230205JV.xlsx", 1)
View(xyz)
setDT(xyz)
xyz[, .N, by=c("auteur")]
xyz[, .N, by=c("auteur")][order(N)]
xyz[, .N, by=c("auteur")][order(N, decreasing = T)]
order(N, decreasing = T)][
order(N, decreasing = T)][
order(N, decreasing = T)][1:20]
xyz[, .N, by=c("auteur")][order(N, decreasing = T)][1:20]
(xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:20]
)
library(ggplot2)
principaux_auteurs <- (
xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:20]
)
ggpot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=N))+
geom_bar(stat = "identity")
library(ggplot2)
ggpot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=N))+
geom_bar(stat = "identity")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggpot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=N))+
geom_bar(stat = "identity")
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=N))+
geom_bar(stat = "identity")
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=N))+
geom_bar(stat = "identity")+
coord_flip()
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, factor(N)), y=N))+
geom_bar(stat = "identity")+
coord_flip()
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=factor(N)))+
geom_bar(stat = "identity")+
coord_flip()
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=factor(N)))+
geom_bar(stat = "identity")+
coord_flip()+
theme_classic()
principaux_auteurs <- (
xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:25]
)
principaux_auteurs <- (
xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:25]
)
library(xlsx)
library(data.table)
install.packages("ggplot2")
library(ggplot2)
xyz <- readxl::read_excel("~/Downloads/XYZ-2015-2022-table-20230205JV.xlsx", 1)
setDT(xyz)
principaux_auteurs <- (
xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:25]
)
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=factor(N)))+
geom_bar(stat = "identity")+
coord_flip()+
theme_classic()
principaux_auteurs <- (
xyz[, .N, by=c("auteur")]
[order(N, decreasing = T)]
[1:21]
)
ggplot2::ggplot(principaux_auteurs, aes(x = reorder(auteur, N), y=factor(N)))+
geom_bar(stat = "identity")+
coord_flip()+
theme_classic()
# Longueur des titres
xyz[, long_titre:=nchar(titre)
# Longueur des titres
xyz[, long_titre:=nchar(titre)]
ggplot(xyz, aes(x=long_titre))+
geom_jitter()
View(xyz)
ggplot(xyz, aes(x = annee, x=long_titre))+
geom_jitter()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()
library(stringr)
# Longueur des titres
xyz[, `:=`(long_titre = nchar(titre),
annee = str_extract(date, '[0-9]{4}'))]
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()
cor(xyz$annee, xyz$long_titre)
View(xyz)
# Longueur des titres
xyz[, `:=`(long_titre = nchar(titre),
annee = as.integer(str_extract(date, '[0-9]{4}')))]
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()
cor(xyz$annee, xyz$long_titre)
ggplot(xyz, aes(x = annee, y=long_titre))+
GeomSmooth()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_point()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_point()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()
ggplot(xyz, aes(x = annee, y=long_titre))+
geom_jitter()+
geom_smooth(method=lm)
# Longueur des textes
xyz[, `:=`(long_nouvelle = nchar(texte))]
View(xyz)
summary(xyz$long_nouvelle)
mots_l <- vector(mode = "list", length = nrow(xyz))
mots_l <- lapply(xyz$texte, strsplit)
mots_l <- lapply(xyz$texte, strsplit, "\\W")
mots_l[[1]]
mots_l[[1]][mots_l[[1]] != ""]
mots_l[[1]][!mots_l[[1]] == ""]
# Liste vide pour recevoir la liste des mots de chaque texte
words_l <- vector(mode = "list", length = nrow(xyz))
# Fonction de calcul des mots pour un texte
words_count_f <- function(x){
words_v <- strsplit(x, "\\W") |> unlist()
not_blanks_v <- which(words_v != "")
words_v <- words_v[not_blanks_v]
return(length(words_v))
}
library(parallel)
# Application de cette fonction à tous les textes de la table de départ (parallélisation de la boucle)
n_words <- mclapply(
xyz$texte, words_count_f,
mc.cores = detectCores()
) |> unlist()
n_words
xyz[, long_nouvelle:=words_count_f(texte)]
ggplot(xyz, aes(x=annee, y=long_nouvelle))
ggplot(xyz, aes(x=annee, y=long_nouvelle))+
geom_jitter
ggplot(xyz, aes(x=annee, y=long_nouvelle))+
geom_jitter()
xyz[, .(long_nouvelle), "annee"]
xyz[, .(long_nouvelle)]
ggplot(xyz, aes(x=annee, y=long_nouvelle))+
geom_point()
xyz$texte[1] |> words_count_f()
xyz$texte[2] |> words_count_f()
# Application de cette fonction à tous les textes de la table de départ (parallélisation de la boucle)
n_words <- mclapply(
xyz$texte, words_count_f,
mc.cores = detectCores()
) |> unlist()
n_words
xyz$long_nouvelle <- n_words
ggplot(xyz, aes(x=annee, y=long_nouvelle))+
geom_point()
ggplot(xyz, aes(x=annee, y=long_nouvelle))+
geom_jitter()
xyz[, .(annee,long_nouvelle)]
xyz[, .(annee,long_nouvelle), "annee"]
xyz[, .(long_nouvelle), "annee"]
xyz[, mean(long_nouvelle), "annee"]
xyz[, round(mean(long_nouvelle),1), "annee"]
xyz[, moyenne=round(mean(long_nouvelle),1), "annee"]
xyz[ , .(moyenne=mean(long_nouvelle)), "annee"]
xyz[ , .(moyenne=round(mean(long_nouvelle)),0), "annee"]
xyz[ , .(moyenne=round(mean(long_nouvelle)),1), "annee"]
xyz[ , .(moyenne=mean(long_nouvelle)), "annee"]
long_moyenne_annuelle <- xyz[ , .(moyenne=mean(long_nouvelle)), "annee"]
cor(long_moyenne_annuelle$annee, long_moyenne_annuelle$moyenne)
ggplot(long_moyenne_annuelle, aes(x=annee, y=moyenne))+
geom_bar()
ggplot(long_moyenne_annuelle, aes(x=annee, y=moyenne))+
geom_bar(stat="identity")
ggplot(xyz, aes(x=annee))+
geom_histogram()
ggplot(xyz, aes(x=annee))+
geom_bar(stat = "count")
long_moyenne_annuelle
